"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/gallery/[...path]/page",{

/***/ "(app-pages-browser)/./app/utils/imageUtils.ts":
/*!*********************************!*\
  !*** ./app/utils/imageUtils.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFullImageUrl: () => (/* binding */ getFullImageUrl),\n/* harmony export */   getOptimizedImageUrl: () => (/* binding */ getOptimizedImageUrl),\n/* harmony export */   getThumbnailUrl: () => (/* binding */ getThumbnailUrl)\n/* harmony export */ });\nconst getThumbnailUrl = function(key) {\n    let width = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 400, height = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 400;\n    const bucketName = \"dhimasweeb-private\";\n    const region = \"us-east-005\";\n    // Using Backblaze's image resizing feature\n    return \"https://\".concat(bucketName, \".s3.\").concat(region, \".backblazeb2.com/\").concat(key, \"?w=\").concat(width, \"&h=\").concat(height, \"&fit=cover\");\n};\nconst getFullImageUrl = (key)=>{\n    const bucketName = \"dhimasweeb-private\";\n    const region = \"us-east-005\";\n    return \"https://\".concat(bucketName, \".s3.\").concat(region, \".backblazeb2.com/\").concat(key);\n};\n// Add this function to handle different image formats\nconst getOptimizedImageUrl = function(key, width, height) {\n    let format = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 'webp';\n    const baseUrl = getFullImageUrl(key);\n    return \"\".concat(baseUrl, \"?w=\").concat(width, \"&h=\").concat(height, \"&format=\").concat(format, \"&quality=85\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9pbWFnZVV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLGtCQUFrQixTQUFDQztRQUFhQyx5RUFBZ0IsS0FBS0MsMEVBQWlCO0lBQ2pGLE1BQU1DLGFBQWFDLG9CQUFzQztJQUN6RCxNQUFNRyxTQUFTSCxhQUFpQztJQUNoRCwyQ0FBMkM7SUFDM0MsT0FBTyxXQUE0QkcsT0FBakJKLFlBQVcsUUFBZ0NILE9BQTFCTyxRQUFPLHFCQUE0Qk4sT0FBVEQsS0FBSSxPQUFnQkUsT0FBWEQsT0FBTSxPQUFZLE9BQVBDLFFBQU87QUFDMUYsRUFBRTtBQUVLLE1BQU1PLGtCQUFrQixDQUFDVDtJQUM5QixNQUFNRyxhQUFhQyxvQkFBc0M7SUFDekQsTUFBTUcsU0FBU0gsYUFBaUM7SUFDaEQsT0FBTyxXQUE0QkcsT0FBakJKLFlBQVcsUUFBZ0NILE9BQTFCTyxRQUFPLHFCQUF1QixPQUFKUDtBQUMvRCxFQUFFO0FBRUYsc0RBQXNEO0FBQy9DLE1BQU1VLHVCQUF1QixTQUFDVixLQUFhQyxPQUFlQztRQUFnQlMsMEVBQWtDO0lBQ2pILE1BQU1DLFVBQVVILGdCQUFnQlQ7SUFDaEMsT0FBTyxHQUFnQkMsT0FBYlcsU0FBUSxPQUFnQlYsT0FBWEQsT0FBTSxPQUFzQlUsT0FBakJULFFBQU8sWUFBaUIsT0FBUFMsUUFBTztBQUM1RCxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvZGhpbWFzd2VlYi9DYXNjYWRlUHJvamVjdHMvcGhvdG8tZ2FsbGVyeS1wb3J0YWwvYXBwL3V0aWxzL2ltYWdlVXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldFRodW1ibmFpbFVybCA9IChrZXk6IHN0cmluZywgd2lkdGg6IG51bWJlciA9IDQwMCwgaGVpZ2h0OiBudW1iZXIgPSA0MDApID0+IHtcbiAgY29uc3QgYnVja2V0TmFtZSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0IyX0JVQ0tFVF9OQU1FO1xuICBjb25zdCByZWdpb24gPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CMl9SRUdJT047XG4gIC8vIFVzaW5nIEJhY2tibGF6ZSdzIGltYWdlIHJlc2l6aW5nIGZlYXR1cmVcbiAgcmV0dXJuIGBodHRwczovLyR7YnVja2V0TmFtZX0uczMuJHtyZWdpb259LmJhY2tibGF6ZWIyLmNvbS8ke2tleX0/dz0ke3dpZHRofSZoPSR7aGVpZ2h0fSZmaXQ9Y292ZXJgO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEZ1bGxJbWFnZVVybCA9IChrZXk6IHN0cmluZykgPT4ge1xuICBjb25zdCBidWNrZXROYW1lID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQjJfQlVDS0VUX05BTUU7XG4gIGNvbnN0IHJlZ2lvbiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0IyX1JFR0lPTjtcbiAgcmV0dXJuIGBodHRwczovLyR7YnVja2V0TmFtZX0uczMuJHtyZWdpb259LmJhY2tibGF6ZWIyLmNvbS8ke2tleX1gO1xufTtcblxuLy8gQWRkIHRoaXMgZnVuY3Rpb24gdG8gaGFuZGxlIGRpZmZlcmVudCBpbWFnZSBmb3JtYXRzXG5leHBvcnQgY29uc3QgZ2V0T3B0aW1pemVkSW1hZ2VVcmwgPSAoa2V5OiBzdHJpbmcsIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBmb3JtYXQ6ICd3ZWJwJyB8ICdqcGVnJyB8ICdwbmcnID0gJ3dlYnAnKSA9PiB7XG4gIGNvbnN0IGJhc2VVcmwgPSBnZXRGdWxsSW1hZ2VVcmwoa2V5KTtcbiAgcmV0dXJuIGAke2Jhc2VVcmx9P3c9JHt3aWR0aH0maD0ke2hlaWdodH0mZm9ybWF0PSR7Zm9ybWF0fSZxdWFsaXR5PTg1YDtcbn07XG4iXSwibmFtZXMiOlsiZ2V0VGh1bWJuYWlsVXJsIiwia2V5Iiwid2lkdGgiLCJoZWlnaHQiLCJidWNrZXROYW1lIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0IyX0JVQ0tFVF9OQU1FIiwicmVnaW9uIiwiTkVYVF9QVUJMSUNfQjJfUkVHSU9OIiwiZ2V0RnVsbEltYWdlVXJsIiwiZ2V0T3B0aW1pemVkSW1hZ2VVcmwiLCJmb3JtYXQiLCJiYXNlVXJsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/imageUtils.ts\n"));

/***/ })

});